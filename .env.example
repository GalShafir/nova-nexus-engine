# MCP Client - Environment Configuration
# Copy this file to .env and customize the values for your environment

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application Port (single app serves both frontend and backend)
APP_PORT=8000

# Environment Mode
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL Database Settings
DATABASE_NAME=mcp_client
DATABASE_USER=nova_user
DATABASE_PASSWORD=NovaNextDevPassword2025!
DATABASE_HOST=postgres
DATABASE_PORT=5432

# Full Database Connection URL (auto-generated from above)
DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}

# =============================================================================
# AUTHENTICATION & SECURITY
# =============================================================================

# JWT Configuration
JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production-please-make-it-long-and-random
ACCESS_TOKEN_EXPIRE_MINUTES=120

# Default admin user for the application
ADMIN_PASSWORD=admin123

# =============================================================================
# MCP SERVER CONFIGURATION (Optional)
# =============================================================================

# External MCP Server (if you have one)
MCP_SERVER_URL=http://localhost:8050/mcp/

# =============================================================================
# LLM CONFIGURATION (Optional)
# =============================================================================

# Uncomment and configure these if you're using external LLM services
# LLM_API_URL=https://api.openai.com/v1
# LLM_MODEL=gpt-4
# LLM_API_KEY=your-openai-api-key-here
# LLM_SSL_VERIFY=true

# =============================================================================
# REDIS CONFIGURATION (Optional)
# =============================================================================
REDIS_PORT=6379
REDIS_URL=redis://redis:6379/0

# =============================================================================
# NGINX CONFIGURATION (Production-like setup)
# =============================================================================
NGINX_PORT=80

# =============================================================================
# DEVELOPMENT FLAGS
# =============================================================================
DEBUG=true
ENVIRONMENT=development

# =============================================================================
# DOCKER COMPOSE PROFILES
# =============================================================================
# Available profiles:
# - default: postgres + backend + frontend
# - full: includes redis
# - nginx: includes nginx reverse proxy
# - mcp: includes mock MCP server
#
# Usage examples:
# docker-compose up                           # Basic setup
# docker-compose --profile full up           # With Redis
# docker-compose --profile nginx up          # With Nginx
# docker-compose --profile mcp up            # With MCP server
# docker-compose --profile full --profile nginx --profile mcp up  # Everything connection settings
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_USER=admin
POSTGRES_PASSWORD=admin
POSTGRES_DB=mcp_db

# Default admin user for the application
ADMIN_PASSWORD=admin

# MCP Server URL
MCP_SERVER_URL=http://localhost:8050/mcp/
